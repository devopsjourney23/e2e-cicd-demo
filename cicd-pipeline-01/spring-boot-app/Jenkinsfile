pipeline{
    agent{
        docker {
            image 'maven-docker-agent:latest'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages{
        stage("Checkout"){
            steps{
                sh 'echo passeed'
                //git branch: 'main', url: 'https://github.com/devopsjourney23/e2e-cicd-demo.git'
            }
        }
        stage('Build and Test'){
            steps{
                sh 'ls -ltr'
                // build the project and create a JAR file
                sh 'cd cicd-pipeline-01/spring-boot-app && mvn clean package'
            }
        }
        stage('SonarQube Code Inspection'){
            steps{
                withSonarQubeEnv('my-sonarqube') {
                    sh 'cd cicd-pipeline-01/spring-boot-app && mvn sonar:sonar'
                }
            }
        }
        stage('Build and Push Docker Image'){
            environment {
              DOCKER_IMAGE = "lkt143/cicd-pipeline-demo-01:${BUILD_NUMBER}"
              DOCKERFILE_LOCATION = "cicd-pipeline-01/spring-boot-app/Dockerfile"
              REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            steps{
                script {
                  sh 'cd cicd-pipeline-01/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                  def dockerImage = docker.image("${DOCKER_IMAGE}")
                  docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                  dockerImage.push()
                  }
                }
            }
        }
    }
}